@prefix fno: <http://semweb.datasciencelab.be/ns/function#> .
@prefix lib: <http://example.com/library#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix anime: <http://users.ugent.be/~bjdmeest/function/anime.ttl#> .

@prefix : <http://example.com/idlab/functions/string/> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix dyversify: <http://example.com/idlab/functions/dyversify/> .

########################
### String functions ###
########################

grel:toUpperCase a fno:Function ;
  fno:name "to Uppercase" ;
  rdfs:label "to Uppercase" ;
  dcterms:description "Returns the input with all letters in upper case." ;
  fno:expects ( grel:valueParam ) ;
  fno:returns ( grel:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "./stringfunctions.js";
    lib:class "StringFunctions";
    lib:method "toUpperCase"
  ].

grel:toLowerCase a fno:Function ;
  fno:name "to Lowercase" ;
  rdfs:label "to Lowercase" ;
  dcterms:description "Returns the input with all letters in lower case." ;
  fno:expects ( grel:valueParam ) ;
  fno:returns ( grel:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "./stringfunctions.js";
    lib:class "StringFunctions";
    lib:method "toLowerCase"
  ].

grel:concat a fno:Function ;
  fno:name "concat" ;
  rdfs:label "concat" ;
  dcterms:description "Returns the concatenation of two strings." ;
  fno:expects ( grel:valueParam grel:valueParam2 ) ;
  fno:returns ( grel:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "./stringfunctions.js";
    lib:class "StringFunctions";
    lib:method "concat"
  ].

grel:escape a fno:Function ;
  fno:name "escape" ;
  rdfs:label "escape" ;
  dcterms:description "Escapes a string, with a mode parameter." ;
  fno:expects ( grel:valueParam grel:modeParam ) ;
  fno:returns ( grel:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "./stringfunctions.js";
    lib:class "StringFunctions";
    lib:method "escape"
  ].

grel:valueParam a fno:Parameter ;
  fno:name "input value" ;
  rdfs:label "input value" ;
  fno:type xsd:string ;
  fno:predicate grel:valueParameter .

grel:valueParam2 a fno:Parameter ;
  fno:name "input value 2" ;
  rdfs:label "input value 2" ;
  fno:type xsd:string ;
  fno:predicate grel:valueParameter2 .

grel:modeParam a fno:Parameter ;
  fno:name "mode value" ;
  rdfs:label "mode value" ;
  fno:type xsd:string ;
  fno:predicate grel:modeParameter .

grel:stringOut a fno:Output ;
  fno:name "output string" ;
  rdfs:label "output string" ;
  fno:type xsd:string ;
  fno:predicate grel:stringOutput .

#######################
### Kitsu functions ###
#######################

anime:getClass a fno:Function ;
  fno:name "get class" ;
  rdfs:label "get class" ;
  dcterms:description "Returns the class based on the given value" ;
  fno:expects ( anime:valueParam ) ;
  fno:returns ( anime:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "kitsu-functions";
    lib:class "KitsuFunctions";
    lib:method "getClass"
  ].

anime:getStreamAgent a fno:Function ;
  fno:name "get stream agent" ;
  rdfs:label "get stream agent" ;
  dcterms:description "Returns the stream agent IRI based on the name" ;
  fno:expects ( anime:valueParam ) ;
  fno:returns ( anime:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "kitsu-functions";
    lib:class "KitsuFunctions";
    lib:method "getStreamAgent"
  ].

anime:scaleRating a fno:Function ;
  fno:name "scale rating" ;
  rdfs:label "scale rating" ;
  dcterms:description "Returns the scaled rating" ;
  fno:expects ( anime:valueParam ) ;
  fno:returns ( anime:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "kitsu-functions";
    lib:class "KitsuFunctions";
    lib:method "scaleRating"
  ].

anime:getActionStatus a fno:Function ;
  fno:name "get action status" ;
  rdfs:label "get action status" ;
  dcterms:description "Returns the Action Status given a Kitsu status" ;
  fno:expects ( anime:valueParam ) ;
  fno:returns ( anime:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "kitsu-functions";
    lib:class "KitsuFunctions";
    lib:method "getActionStatus"
  ].

anime:valueParam a fno:Parameter ;
  fno:name "input value" ;
  rdfs:label "input value" ;
  fno:type xsd:string ;
  fno:predicate anime:value .

###########################
### Dyversify functions ###
###########################

dyversify:generateIRI a fno:Function ;
  fno:name "generate IRI" ;
  rdfs:label "generate IRI" ;
  dcterms:description "Returns the IRI for an element (removes unwanted characters and corrects capitalization)" ;
  fno:expects ( dyversify:valueParam dyversify:valueParam2 ) ;
  fno:returns ( dyversify:stringOut ) ;
  lib:providedBy [
    lib:localLibrary "dyversify-functions";
    lib:class "DyversifyFunctions";
    lib:method "generateIRI"
  ].

dyversify:valueParam a fno:Parameter ;
  fno:name "input value" ;
  rdfs:label "input value" ;
  fno:type xsd:string ;
  fno:predicate dyversify:str .

dyversify:valueParam2 a fno:Parameter ;
  fno:name "input value 2" ;
  rdfs:label "input value 2" ;
  fno:type xsd:string ;
  fno:predicate dyversify:prefix .

dyversify:stringOut a fno:Output ;
  fno:name "output string" ;
  rdfs:label "output string" ;
  fno:type xsd:string ;
  fno:predicate dyversify:stringOutput .